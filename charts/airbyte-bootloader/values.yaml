
## @param global.serviceAccountName Name of service account to be associated with service
## @param deploymentMode Determines deployment mode of airbyte
## @param secretName Overrides the secrate name with with credentials to S3 Bucket and logging
## @param database.secretName Name of database secret
## @param database.secretValue Value of database password key stored in secret
## @param database.host Hostname of database
## @param database.port Database port
global:
  serviceAccountName: placeholderServiceAccount
  deploymentMode: oss
  secretName: ""
  database:
    secretName: ""
    secretValue: ""
  secrets: {}
  env_vars: {}
  extraContainers: []


enabled: true
## @param image.repository The repository to use for the airbyte bootloader image.
## @param image.pullPolicy the pull policy to use for the airbyte bootloader image
## @param image.tag The airbyte bootloader image tag. Defaults to the chart's AppVersion
image:
  repository: airbyte/bootloader
  pullPolicy: IfNotPresent

## @param podAnnotations [object] Add extra annotations to the bootloader pod
##
podAnnotations: {}

## @param nodeSelector [object] Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## @param tolerations [array] Tolerations for worker pod assignment.
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## Bootloader resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
## We usually recommend not to specify default resources and to leave this as a conscious
## choice for the user. This also increases chances charts run on environments with little
## resources, such as Minikube. If you do want to specify resources, uncomment the following
## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
## @param bootloader.resources.limits [object] The resources limits for the airbyte bootloader image
## @param bootloader.resources.requests [object] The requested resources for the airbyte bootloader image
resources:
  ## Example:
  ## requests:
  ##    memory: 256Mi
  ##    cpu: 250m
  requests: {}
  ## Example:
  ## limits:
  ##    cpu: 200m
  ##    memory: 1Gi
  limits: {}

## @param affinity [object] Affinity and anti-affinity for bootloader pod assignment.
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

## @param extraEnv [array] Supply extra env variables to main container using full notation
## Example: (With default env vars and values taken from generated config map)
## extraEnv:
##   - name: AIRBYTE_VERSION
##     valueFrom:
##       configMapKeyRef:
##         name: airbyte-env
##         key: AIRBYTE_VERSION
##   - name: DATABASE_HOST
##     valueFrom:
##       configMapKeyRef:
##         name: airbyte-env
##         key: DATABASE_HOST
##   - name: DATABASE_PORT
##     valueFrom:
##       configMapKeyRef:
##         name: airbyte-env
##         key: DATABASE_PORT
##   - name: DATABASE_PASSWORD
##     valueFrom:
##       secretKeyRef:
##         name: airbyte-secrets
##         key: DATABASE_PASSWORD
##   - name: DATABASE_URL
##     valueFrom:
##       configMapKeyRef:
##         name: airbyte-env
##         key: DATABASE_URL
##   - name: DATABASE_USER
##     valueFrom:
##       secretKeyRef:
##         name: airbyte-secrets
##         key: DATABASE_USER
##
extraEnv: []
## @param secrets [object] Supply additional secrets to container
## Example:
## secrets:
##   DATABASE_PASSWORD: strong-password
##   DATABASE_USER: my-db-user
secrets: {}

## @param env_vars [object] Supply extra env variables to main container using simplified notation
## Example:
## env_vars:
##   DATABASE_HOST: airbyte-db
##   DATABASE_PORT: 5432
env_vars: {}
## @param extraContainer [array] Additional container for server pod(s)
## Example:
# extraContainers:
#   - name: otel_collector
#     image: somerepo/someimage:sometag
#     args: [
#         "--important-args"
#     ]
#     ports:
#       - containerPort: 443
#     volumeMounts:
#       - name: volumeMountCool
#         mountPath: /some/path
#         readOnly: true
extraContainers: []

## @param extraInitContainers [array] Additional init containers for server pod(s)
## Example:
# extraInitContainers:
#   - name: sleepy
#     image: alpine
#     command: ['sleep', '60']

extraInitContainers: []

## @param extraVolumeMounts [array] Additional volumeMounts for server container(s).
## Examples (when using `containerSecurityContext.readOnlyRootFilesystem=true`):
## extraVolumeMounts:
##   - name: tmpdir
##     mountPath: /tmp
##
extraVolumeMounts: []

## @param extraVolumes [array] Additional volumes for server pod(s).
## Examples (when using `containerSecurityContext.readOnlyRootFilesystem=true`):
## extraVolumes:
##   - name: tmpdir
##     emptyDir: {}
##
extraVolumes: []